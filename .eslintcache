[{"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\index.tsx":"1","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\App.tsx":"2","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\DashboardPage.tsx":"3","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\utils\\config.tsx":"4","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\tracking\\components\\ActionCard.tsx":"5","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\actions\\ActionPage.tsx":"6","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\actions\\components\\ActionForm.tsx":"7","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\actions\\components\\ColorButton.tsx":"8","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\actions\\components\\IconButton.tsx":"9","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\actions\\components\\WeekdayButton.tsx":"10","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\utils\\theme.tsx":"11","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\auth\\AuthPage.tsx":"12","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\hooks\\useMobile.tsx":"13","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\auth\\components\\AuthBanner.tsx":"14","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\auth\\components\\AuthForm.tsx":"15","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\utils\\helper.tsx":"16","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\redux\\store.tsx":"17","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\redux\\reducers\\auth.ts":"18","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\redux\\actionTypes.ts":"19","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\redux\\actions\\auth.ts":"20","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\utils\\urls.tsx":"21","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\temp\\Chart.tsx":"22","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\temp\\Orders.tsx":"23","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\temp\\Deposits.tsx":"24","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\ui\\Title.tsx":"25","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\ui\\Copyright.tsx":"26","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\ui\\AppIcon.tsx":"27","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\ui\\Loading.tsx":"28","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\nav\\NavWrapper.tsx":"29","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\ui\\ToastMsg.tsx":"30","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\nav\\navListItems.tsx":"31","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\nav\\NavBar.tsx":"32","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\nav\\NavDrawer.tsx":"33","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\tracking\\TrackingPage.tsx":"34","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\actions\\components\\ActionList.tsx":"35","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\redux\\reducers\\action.ts":"36","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\redux\\actions\\action.ts":"37","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\redux\\reducers\\tracking.ts":"38","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\redux\\actions\\tracking.tsx":"39","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\tracking\\components\\TrackCalendar.tsx":"40","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\tracking\\components\\TrackingList.tsx":"41","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\account\\AccountPage.tsx":"42","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\account\\components\\InfoForm.tsx":"43","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\account\\components\\PasswordForm.tsx":"44","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\account\\components\\DeleteForm.tsx":"45"},{"size":1269,"mtime":1610375702353,"results":"46","hashOfConfig":"47"},{"size":2522,"mtime":1610375692758,"results":"48","hashOfConfig":"47"},{"size":4360,"mtime":1609952591405,"results":"49","hashOfConfig":"47"},{"size":1222,"mtime":1610375066685,"results":"50","hashOfConfig":"47"},{"size":7420,"mtime":1610365702875,"results":"51","hashOfConfig":"47"},{"size":5159,"mtime":1610364980302,"results":"52","hashOfConfig":"47"},{"size":14016,"mtime":1610365057646,"results":"53","hashOfConfig":"47"},{"size":2043,"mtime":1610085707657,"results":"54","hashOfConfig":"47"},{"size":2247,"mtime":1610086995003,"results":"55","hashOfConfig":"47"},{"size":1651,"mtime":1610017578820,"results":"56","hashOfConfig":"47"},{"size":738,"mtime":1610086133036,"results":"57","hashOfConfig":"47"},{"size":714,"mtime":1609945941451,"results":"58","hashOfConfig":"47"},{"size":236,"mtime":1609943068090,"results":"59","hashOfConfig":"47"},{"size":2556,"mtime":1609952590599,"results":"60","hashOfConfig":"47"},{"size":8926,"mtime":1609955238630,"results":"61","hashOfConfig":"47"},{"size":1114,"mtime":1610091463187,"results":"62","hashOfConfig":"47"},{"size":639,"mtime":1610266234513,"results":"63","hashOfConfig":"47"},{"size":584,"mtime":1609991521713,"results":"64","hashOfConfig":"47"},{"size":500,"mtime":1610364430432,"results":"65","hashOfConfig":"47"},{"size":1507,"mtime":1609944692223,"results":"66","hashOfConfig":"47"},{"size":413,"mtime":1610350669491,"results":"67","hashOfConfig":"47"},{"size":1576,"mtime":1609952563628,"results":"68","hashOfConfig":"47"},{"size":2586,"mtime":1609952565213,"results":"69","hashOfConfig":"47"},{"size":874,"mtime":1609952564422,"results":"70","hashOfConfig":"47"},{"size":438,"mtime":1609952561097,"results":"71","hashOfConfig":"47"},{"size":584,"mtime":1609952580331,"results":"72","hashOfConfig":"47"},{"size":1082,"mtime":1609952589063,"results":"73","hashOfConfig":"47"},{"size":467,"mtime":1609952607983,"results":"74","hashOfConfig":"47"},{"size":1934,"mtime":1610286409374,"results":"75","hashOfConfig":"47"},{"size":605,"mtime":1610350418824,"results":"76","hashOfConfig":"47"},{"size":2972,"mtime":1610365980674,"results":"77","hashOfConfig":"47"},{"size":2155,"mtime":1609953987615,"results":"78","hashOfConfig":"47"},{"size":2102,"mtime":1609953849622,"results":"79","hashOfConfig":"47"},{"size":1278,"mtime":1610291502217,"results":"80","hashOfConfig":"47"},{"size":4701,"mtime":1610364670788,"results":"81","hashOfConfig":"47"},{"size":604,"mtime":1610364431838,"results":"82","hashOfConfig":"47"},{"size":2629,"mtime":1610364457336,"results":"83","hashOfConfig":"47"},{"size":936,"mtime":1610268211881,"results":"84","hashOfConfig":"47"},{"size":2186,"mtime":1610278340296,"results":"85","hashOfConfig":"47"},{"size":5679,"mtime":1610292395885,"results":"86","hashOfConfig":"47"},{"size":2473,"mtime":1610291521356,"results":"87","hashOfConfig":"47"},{"size":527,"mtime":1610348451461,"results":"88","hashOfConfig":"47"},{"size":4937,"mtime":1610365799453,"results":"89","hashOfConfig":"47"},{"size":5144,"mtime":1610365874748,"results":"90","hashOfConfig":"47"},{"size":2433,"mtime":1610348423625,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tkoe18",{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"99"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"99"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"99"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"99"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"99"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"99"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"99"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"99"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"99"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"99"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"99"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"99"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"99"},"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\index.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\App.tsx",["197"],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\DashboardPage.tsx",["198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214"],"import * as React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport { deepOrange } from \"@material-ui/core/colors\";\r\nimport Chart from \"../components/temp/Chart\";\r\nimport Deposits from \"../components/temp/Deposits\";\r\nimport Orders from \"../components/temp/Orders\";\r\nimport AppIcon from \"../components/ui/AppIcon\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    boxSizing: \"border-box\",\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[100]\r\n        : theme.palette.grey[900],\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  orange: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const toggleDrawer = () => {\r\n    setOpen(!open);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={3}>\r\n        {/* Chart */}\r\n        <Grid item xs={12} md={8} lg={9}>\r\n          <Paper className={fixedHeightPaper}>\r\n            <Chart />\r\n          </Paper>\r\n        </Grid>\r\n        {/* Recent Deposits */}\r\n        <Grid item xs={12} md={4} lg={3}>\r\n          <Paper className={fixedHeightPaper}>\r\n            <Deposits />\r\n          </Paper>\r\n        </Grid>\r\n        {/* Recent Orders */}\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            <Orders />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n",["215","216"],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\utils\\config.tsx",["217"],"import { Color, Weekday } from \"../redux/redux\";\r\n\r\nexport default {\r\n  appName: \"Trackme\",\r\n  githubName: \"lucaslmlok\",\r\n  githubProfile: \"https://github.com/lucaslmlok\",\r\n  githubRepo: \"https://github.com/lucaslmlok/trackme-frontend\",\r\n  apiPath: \"https://lucas-trackme.herokuapp.com\",\r\n  drawerWidth: 240,\r\n  dateFormat: \"yyyy-MM-DD\",\r\n};\r\n\r\nexport const ActionTypes = {\r\n  yesNo: \"Yes / No\",\r\n  number: \"Quantity\",\r\n};\r\n\r\nexport const Colors: Color[] = [\r\n  \"deepPurple\",\r\n  \"indigo\",\r\n  \"blue\",\r\n  \"lightBlue\",\r\n  \"cyan\",\r\n  \"teal\",\r\n  \"green\",\r\n  \"lightGreen\",\r\n  \"lime\",\r\n  \"yellow\",\r\n  \"amber\",\r\n  \"orange\",\r\n  \"red\",\r\n  \"pink\",\r\n  \"purple\",\r\n  \"deepOrange\",\r\n  \"brown\",\r\n  \"grey\",\r\n  \"blueGrey\",\r\n];\r\n\r\nexport const Icons = [\r\n  \"king_bed\",\r\n  \"hiking\",\r\n  \"local_dining\",\r\n  \"local_bar\",\r\n  \"local_cafe\",\r\n  \"pool\",\r\n  \"directions_run\",\r\n  \"fastfood\",\r\n  \"directions_bike\",\r\n  \"computer\",\r\n  \"favorite\",\r\n  \"local_pizza\",\r\n  \"sports_soccer\",\r\n  \"fitness_center\",\r\n  \"videogame_asset\",\r\n  \"alarm_on\",\r\n  \"menu_book\",\r\n  \"headset\",\r\n  \"commute\",\r\n  \"flight\",\r\n  \"shopping_cart\",\r\n  \"local_atm\",\r\n];\r\n\r\nexport const Weekdays: Weekday[] = [\r\n  \"mon\",\r\n  \"tue\",\r\n  \"wed\",\r\n  \"thu\",\r\n  \"fri\",\r\n  \"sat\",\r\n  \"sun\",\r\n];\r\n","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\tracking\\components\\ActionCard.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\actions\\ActionPage.tsx",["218"],"import { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Fab,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport * as actionActions from \"../../redux/actions/action\";\r\nimport { getErrorData, timeout } from \"../../utils/helper\";\r\nimport ActionList from \"./components/ActionList\";\r\nimport ActionForm from \"./components/ActionForm\";\r\nimport ToastMsg from \"../../components/ui/ToastMsg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fab: {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    bottom: theme.spacing(3),\r\n    right: theme.spacing(3),\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\ntype DeleteProps = {\r\n  isOpen: boolean;\r\n  loading: boolean;\r\n  onClose: Function;\r\n  onConfirm: Function;\r\n};\r\n\r\nconst DeleteDialog = ({ isOpen, loading, onClose, onConfirm }: DeleteProps) => {\r\n  return (\r\n    <Dialog open={isOpen} onClose={() => onClose()}>\r\n      <DialogTitle>Delete Action(s)</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Are you sure to delete the action(s) selected?\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => onClose()} color=\"secondary\" disabled={loading}>\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={() => onConfirm()}\r\n          color=\"primary\"\r\n          autoFocus\r\n          disabled={loading}\r\n        >\r\n          {loading ? \"Loading\" : \"OK\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst ActionPage = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const query = new URLSearchParams(useLocation().search);\r\n\r\n  const [formOpen, setFormOpen] = useState(false);\r\n  const [selectedId, setSelectedId] = useState<string>(null);\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [deleteSelected, setDeleteSelected] = useState<string>(null);\r\n  const [deleteList, setDeleteList] = useState<string[]>([]);\r\n\r\n  const [deleteLoading, setDeleteLoading] = useState(false);\r\n\r\n  const toggleCheckbox = (actionId: string) => {\r\n    const newDeleteList = [...deleteList];\r\n    const index = newDeleteList.indexOf(actionId);\r\n    if (index === -1) {\r\n      newDeleteList.push(actionId);\r\n    } else {\r\n      newDeleteList.splice(index, 1);\r\n    }\r\n    setDeleteList(newDeleteList);\r\n  };\r\n\r\n  const openForm = (actionId: string = null) => {\r\n    if (actionId) setSelectedId(actionId);\r\n    setFormOpen(true);\r\n  };\r\n\r\n  const closeForm = () => {\r\n    setSelectedId(null);\r\n    setFormOpen(false);\r\n  };\r\n\r\n  const onDeleteConfirm = async () => {\r\n    setDeleteLoading(true);\r\n\r\n    const actionIds = deleteSelected ? [deleteSelected] : deleteList;\r\n    const result: any = await dispatch(actionActions.deleteActions(actionIds));\r\n    if (result.error) {\r\n      const body = getErrorData(result.data);\r\n      toast.error(<ToastMsg title={result.message} body={body} />);\r\n    } else {\r\n      if (deleteSelected) {\r\n        setDeleteSelected(null);\r\n        if (deleteList.length && deleteList.includes(deleteSelected)) {\r\n          setDeleteList(deleteList.filter((d) => d !== deleteSelected));\r\n        }\r\n      } else {\r\n        setDeleteList([]);\r\n      }\r\n      toast.success(result);\r\n      await timeout();\r\n      setDeleteDialog(false);\r\n    }\r\n    setDeleteLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await dispatch(actionActions.fetchActionList());\r\n      const type = query.get(\"type\");\r\n      const actionId = query.get(\"actionId\");\r\n      type === \"form\" && openForm(actionId);\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Box mt={-1} pb={2} display=\"flex\" justifyContent=\"flex-start\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          disabled={!deleteList.length}\r\n          startIcon={<DeleteIcon />}\r\n          onClick={() => setDeleteDialog(true)}\r\n        >\r\n          Delete Selected\r\n        </Button>\r\n      </Box>\r\n      <ActionList\r\n        deleteList={deleteList}\r\n        toggleCheckbox={toggleCheckbox}\r\n        onEdit={openForm}\r\n        onDelete={(actionId) => {\r\n          setDeleteSelected(actionId);\r\n          setDeleteDialog(true);\r\n        }}\r\n      />\r\n      <ActionForm\r\n        isOpen={formOpen}\r\n        selectedId={selectedId}\r\n        onClose={() => closeForm()}\r\n      />\r\n      <Fab color=\"secondary\" className={classes.fab} onClick={() => openForm()}>\r\n        <AddIcon />\r\n      </Fab>\r\n      <DeleteDialog\r\n        isOpen={deleteDialog}\r\n        loading={deleteLoading}\r\n        onClose={() => setDeleteDialog(false)}\r\n        onConfirm={() => onDeleteConfirm()}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ActionPage;\r\n","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\actions\\components\\ActionForm.tsx",["219"],"import { forwardRef, ReactElement, Ref, useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  Dialog,\r\n  AppBar,\r\n  Toolbar,\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  IconButton,\r\n  makeStyles,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Theme,\r\n  Slide,\r\n} from \"@material-ui/core\";\r\nimport { TransitionProps } from \"@material-ui/core/transitions\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport * as colors from \"@material-ui/core/colors\";\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport config from \"../../../utils/config\";\r\nimport { Colors, Icons, Weekdays, ActionTypes } from \"../../../utils/config\";\r\nimport { errorText, getErrorData, timeout } from \"../../../utils/helper\";\r\nimport { Action, State, Weekday } from \"../../../redux/redux\";\r\nimport useMobile from \"../../../hooks/useMobile\";\r\nimport * as actionActions from \"../../../redux/actions/action\";\r\nimport ColorButton from \"./ColorButton\";\r\nimport ActionIconButton from \"./IconButton\";\r\nimport WeekdayButton from \"./WeekdayButton\";\r\nimport ToastMsg from \"../../../components/ui/ToastMsg\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n    transition: \"background-color 500ms\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  colorBtnGrid: {\r\n    display: \"grid\",\r\n    gridGap: 10,\r\n    gridTemplateColumns: \"repeat(auto-fill, minmax(40px, 1fr))\",\r\n    marginTop: 12,\r\n  },\r\n  iconBtnGrid: {\r\n    display: \"grid\",\r\n    gridGap: 10,\r\n    gridTemplateColumns: \"repeat(auto-fill, minmax(50px, 1fr))\",\r\n    marginTop: 12,\r\n  },\r\n  weekdayBtnGrid: {\r\n    display: \"grid\",\r\n    gridGap: 10,\r\n    gridTemplateColumns: \"repeat(auto-fill, minmax(55px, 1fr))\",\r\n    marginTop: 12,\r\n    marginBottom: 10,\r\n  },\r\n}));\r\n\r\nconst getSchema = (actionType: string) => {\r\n  return yup.object().shape({\r\n    name: yup.string().required(),\r\n    ...(actionType === \"number\"\r\n      ? {\r\n          target: yup.number().required().positive().integer(),\r\n          increment: yup.number().required().positive().integer(),\r\n          unit: yup.string().required(),\r\n        }\r\n      : null),\r\n  });\r\n};\r\n\r\nconst getDefaultValues = (action: Action) => {\r\n  return {\r\n    type: action?.type || \"yesNo\",\r\n    color: action?.color || Colors[0],\r\n    icon: action?.icon || Icons[0],\r\n    startDate: moment(action?.startDate).startOf(\"day\"),\r\n    endDate: action?.endDate ? moment(action.endDate).startOf(\"day\") : null,\r\n    weekdays: action?.weekdays || [\"mon\", \"tue\", \"wed\", \"thu\", \"fri\"],\r\n  };\r\n};\r\n\r\nconst Transition = forwardRef(function Transition(\r\n  props: TransitionProps & { children?: ReactElement },\r\n  ref: Ref<unknown>\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\ntype Props = {\r\n  isOpen: boolean;\r\n  selectedId?: string;\r\n  onClose: Function;\r\n};\r\n\r\nconst ActionForm = ({ isOpen, selectedId, onClose }: Props) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const isMobile = useMobile();\r\n\r\n  const { actionList } = useSelector((state: State) => state.action);\r\n  const action = actionList.find((a) => a.id === selectedId);\r\n  const defaultValues = getDefaultValues(action);\r\n\r\n  const [actionType, setActionType] = useState(defaultValues.type);\r\n  const [actionColor, setActionColor] = useState(defaultValues.color);\r\n  const [actionIcon, setActionIcon] = useState(defaultValues.icon);\r\n  const [startDate, setStartDate] = useState(defaultValues.startDate);\r\n  const [endDate, setEndDate] = useState(defaultValues.endDate);\r\n  const [actionWeekdays, setActionWeekdays] = useState(defaultValues.weekdays);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { control, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(getSchema(actionType)),\r\n  });\r\n\r\n  const toggleWeekday = (weekday: Weekday) => {\r\n    let newWeekdays: Weekday[];\r\n    const index = actionWeekdays.indexOf(weekday);\r\n    if (index === -1) {\r\n      newWeekdays = [...actionWeekdays, weekday];\r\n    } else {\r\n      newWeekdays = actionWeekdays.filter((w) => w !== weekday);\r\n    }\r\n    setActionWeekdays(newWeekdays);\r\n  };\r\n\r\n  const resetValues = () => {\r\n    setActionType(defaultValues.type);\r\n    setActionColor(defaultValues.color);\r\n    setActionIcon(defaultValues.icon);\r\n    setStartDate(defaultValues.startDate);\r\n    setEndDate(defaultValues.endDate);\r\n    setActionWeekdays(defaultValues.weekdays);\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    setLoading(true);\r\n\r\n    const newAction: Action = _.cloneDeep(data);\r\n    newAction.type = actionType;\r\n    newAction.color = actionColor;\r\n    newAction.icon = actionIcon;\r\n    newAction.startDate = startDate.format(config.dateFormat);\r\n    newAction.endDate = endDate ? endDate.format(config.dateFormat) : null;\r\n    newAction.weekdays = actionWeekdays;\r\n\r\n    if (newAction.type === \"yesNo\") {\r\n      newAction.target = 1;\r\n      newAction.increment = 1;\r\n      newAction.unit = \"unit\";\r\n    }\r\n\r\n    if (action) newAction.id = action.id;\r\n\r\n    const result: any = await dispatch(actionActions.updateAction(newAction));\r\n    if (result.error) {\r\n      const body = getErrorData(result.data);\r\n      toast.error(<ToastMsg title={result.message} body={body} />);\r\n    } else {\r\n      toast.success(<ToastMsg title={result} />);\r\n      await timeout();\r\n      onClose();\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    resetValues();\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <Dialog\r\n      fullScreen={isMobile}\r\n      open={isOpen}\r\n      onClose={() => onClose()}\r\n      TransitionComponent={Transition}\r\n    >\r\n      {isOpen && (\r\n        <form noValidate onSubmit={handleSubmit(onSubmit)}>\r\n          <AppBar\r\n            className={classes.appBar}\r\n            style={{ backgroundColor: colors[actionColor][800] }}\r\n          >\r\n            <Toolbar>\r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                onClick={() => onClose()}\r\n                aria-label=\"close\"\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n                {`${!!action ? \"Edit\" : \"Add\"} Action`}\r\n              </Typography>\r\n              <Button\r\n                autoFocus\r\n                color=\"inherit\"\r\n                type=\"submit\"\r\n                disabled={loading}\r\n              >\r\n                Save\r\n              </Button>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Box px={4} pt={3} pb={6}>\r\n            <Grid container spacing={4}>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  as={TextField}\r\n                  name=\"name\"\r\n                  label=\"Action Name\"\r\n                  control={control}\r\n                  defaultValue={action?.name || \"\"}\r\n                  required\r\n                  fullWidth\r\n                  error={!!errors?.name}\r\n                  helperText={errorText(errors, \"name\")}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <Box mb={-1}>\r\n                  <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Action Type *</FormLabel>\r\n\r\n                    <RadioGroup\r\n                      aria-label=\"promoting\"\r\n                      style={{ flexDirection: \"row\" }}\r\n                      value={actionType}\r\n                      onChange={(e) => setActionType(e.target.value as any)}\r\n                    >\r\n                      {Object.keys(ActionTypes).map((key) => (\r\n                        <FormControlLabel\r\n                          value={key}\r\n                          control={<Radio />}\r\n                          label={ActionTypes[key]}\r\n                        />\r\n                      ))}\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                </Box>\r\n              </Grid>\r\n\r\n              {actionType === \"number\" && (\r\n                <>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <Controller\r\n                      as={TextField}\r\n                      type=\"number\"\r\n                      name=\"target\"\r\n                      label=\"Quantity Target\"\r\n                      control={control}\r\n                      defaultValue={action?.target || 1}\r\n                      required\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      error={!!errors?.target}\r\n                      helperText={errorText(errors, \"target\")}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <Controller\r\n                      as={TextField}\r\n                      type=\"number\"\r\n                      name=\"increment\"\r\n                      label=\"Quantity Increment\"\r\n                      control={control}\r\n                      defaultValue={action?.increment || 1}\r\n                      required\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      error={!!errors?.increment}\r\n                      helperText={errorText(errors, \"increment\")}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <Controller\r\n                      as={TextField}\r\n                      name=\"unit\"\r\n                      label=\"Quantity Unit\"\r\n                      control={control}\r\n                      defaultValue={action?.unit || \"unit\"}\r\n                      required\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      error={!!errors?.unit}\r\n                      helperText={errorText(errors, \"unit\")}\r\n                    />\r\n                  </Grid>\r\n                </>\r\n              )}\r\n\r\n              <Grid item xs={12}>\r\n                <FormControl component=\"fieldset\" style={{ width: \"100%\" }}>\r\n                  <FormLabel component=\"legend\">Action Color *</FormLabel>\r\n                  <Box className={classes.colorBtnGrid}>\r\n                    {Colors.map((color) => (\r\n                      <ColorButton\r\n                        key={`color-btn-${color}`}\r\n                        color={color}\r\n                        selected={actionColor}\r\n                        onSelect={(selected) => setActionColor(selected)}\r\n                      />\r\n                    ))}\r\n                  </Box>\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <FormControl component=\"fieldset\" style={{ width: \"100%\" }}>\r\n                  <FormLabel component=\"legend\">Action Icon *</FormLabel>\r\n                  <Box className={classes.iconBtnGrid}>\r\n                    {Icons.map((icon) => (\r\n                      <ActionIconButton\r\n                        key={`icon-btn-${icon}`}\r\n                        icon={icon}\r\n                        color={actionColor}\r\n                        selected={actionIcon}\r\n                        onSelect={(selected) => setActionIcon(selected)}\r\n                      />\r\n                    ))}\r\n                  </Box>\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <DatePicker\r\n                    fullWidth\r\n                    autoOk\r\n                    required\r\n                    label=\"Starting Date\"\r\n                    format=\"DD/MM/yyyy\"\r\n                    value={startDate}\r\n                    onChange={(date) => setStartDate(date)}\r\n                    maxDate={endDate || undefined}\r\n                    error={!!errors?.startDate}\r\n                    helperText={errorText(errors, \"startDate\")}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <DatePicker\r\n                    clearable\r\n                    fullWidth\r\n                    autoOk\r\n                    label=\"Ending Date\"\r\n                    format=\"DD/MM/yyyy\"\r\n                    value={endDate}\r\n                    onChange={(date) => setEndDate(date as any)}\r\n                    minDate={startDate}\r\n                    error={!!errors?.endDate}\r\n                    helperText={errorText(errors, \"endDate\")}\r\n                  />\r\n                </Grid>\r\n              </MuiPickersUtilsProvider>\r\n\r\n              <Grid item xs={12}>\r\n                <FormControl component=\"fieldset\" style={{ width: \"100%\" }}>\r\n                  <FormLabel component=\"legend\">Action Weekdays *</FormLabel>\r\n                  <Box className={classes.weekdayBtnGrid}>\r\n                    {Weekdays.map((weekday) => (\r\n                      <WeekdayButton\r\n                        key={`weekday-btn-${weekday}`}\r\n                        weekday={weekday}\r\n                        active={actionWeekdays.includes(weekday)}\r\n                        onSelect={() => toggleWeekday(weekday)}\r\n                      />\r\n                    ))}\r\n                  </Box>\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  color=\"primary\"\r\n                  disabled={loading}\r\n                >\r\n                  {loading ? \"Loading\" : \"Save\"}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </form>\r\n      )}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ActionForm;\r\n","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\actions\\components\\ColorButton.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\actions\\components\\IconButton.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\actions\\components\\WeekdayButton.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\utils\\theme.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\auth\\AuthPage.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\hooks\\useMobile.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\auth\\components\\AuthBanner.tsx",["220"],"import { Box, Typography, makeStyles } from \"@material-ui/core\";\r\n\r\nimport useMobile from \"../../../hooks/useMobile\";\r\nimport AppIcon from \"../../../components/ui/AppIcon\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  banner: {\r\n    position: \"absolute\",\r\n    zIndex: -1,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    objectFit: \"cover\",\r\n  },\r\n  bannerOverlay: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"rgba(22, 9, 44, 0.6)\",\r\n  },\r\n  bannerText: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    display: \"inline\",\r\n    letterSpacing: 2,\r\n  },\r\n  colorBannerText: {\r\n    fontWeight: \"bold\",\r\n    display: \"inline\",\r\n    letterSpacing: 2,\r\n  },\r\n  bannerDesc: {\r\n    color: \"#ddd\",\r\n  },\r\n}));\r\n\r\nconst AuthBanner = () => {\r\n  const classes = useStyles();\r\n  const isMobile = useMobile();\r\n\r\n  return (\r\n    <>\r\n      <Box position=\"relative\" width={1} height={1}>\r\n        <video\r\n          autoPlay\r\n          loop\r\n          muted\r\n          className={classes.banner}\r\n          style={{ display: isMobile ? \"none\" : \"block\" }}\r\n        >\r\n          <source src=\"banner.mp4\" type=\"video/mp4\" />\r\n        </video>\r\n        <img\r\n          src=\"banner.jpg\"\r\n          className={classes.banner}\r\n          style={{ display: isMobile ? \"block\" : \"none\" }}\r\n        />\r\n        <Box\r\n          className={classes.bannerOverlay}\r\n          px={isMobile ? 4 : 12}\r\n          py={isMobile ? 4 : 8}\r\n        >\r\n          <Box display=\"flex\" width={1} mb={isMobile ? 2 : 6}>\r\n            <AppIcon titleColor=\"white\" size={isMobile ? \"default\" : \"large\"} />\r\n          </Box>\r\n          <Typography\r\n            variant=\"h2\"\r\n            className={classes.bannerText}\r\n            style={{ fontSize: isMobile ? 30 : 60 }}\r\n          >\r\n            <Typography\r\n              color=\"secondary\"\r\n              className={classes.colorBannerText}\r\n              style={{ fontSize: isMobile ? 30 : 60 }}\r\n            >\r\n              Track\r\n            </Typography>{\" \"}\r\n            Your Life\r\n            <br />\r\n            Seamlessly.\r\n          </Typography>\r\n          <Box\r\n            className={classes.bannerDesc}\r\n            mt={isMobile ? 2 : 6}\r\n            style={{\r\n              fontSize: isMobile ? 16 : 20,\r\n              lineHeight: isMobile ? 1.8 : 2,\r\n            }}\r\n          >\r\n            A productivity tools helps people monitor their\r\n            <br />\r\n            and do their best work by being effective.\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthBanner;\r\n","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\auth\\components\\AuthForm.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\utils\\helper.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\redux\\store.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\redux\\reducers\\auth.ts",["221"],"import { AuthState } from \"../redux\";\r\nimport * as actionTypes from \"../actionTypes\";\r\n\r\nconst initialState: AuthState = {\r\n  tokenCheck: false,\r\n  token: null,\r\n  userId: null,\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.TOKEN_CHECK:\r\n      return { ...state, tokenCheck: true };\r\n    case actionTypes.AUTH_IN:\r\n      return { ...state, token: payload.token, userId: payload.userId };\r\n    case actionTypes.AUTH_OUT:\r\n      return { ...state, token: null, userId: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\redux\\actionTypes.ts",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\redux\\actions\\auth.ts",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\utils\\urls.tsx",["222"],"import config from \"./config\";\r\n\r\nconst { apiPath } = config;\r\n\r\nexport default {\r\n  signup: apiPath + \"/user/signup\",\r\n  login: apiPath + \"/user/login\",\r\n  tokenLogin: apiPath + \"/user/token-login\",\r\n  action: apiPath + \"/action\",\r\n  actionRecord: apiPath + \"/action-record\",\r\n  getInfo: apiPath + \"/user\",\r\n  changeInfo: apiPath + \"/user/change-info\",\r\n  changePassword: apiPath + \"/user/change-password\",\r\n};\r\n","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\temp\\Chart.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\temp\\Orders.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\temp\\Deposits.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\ui\\Title.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\ui\\Copyright.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\ui\\AppIcon.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\ui\\Loading.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\nav\\NavWrapper.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\ui\\ToastMsg.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\nav\\navListItems.tsx",["223"],"import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@material-ui/core\";\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\n\nimport * as authActions from \"../../redux/actions/auth\";\n\nexport const MainListItems = ({ currentPage, onClick }) => {\n  const history = useHistory();\n\n  const navigate = (path: string) => {\n    history.push(path);\n    onClick();\n  };\n\n  const pageColor = (page: string): \"secondary\" | \"inherit\" => {\n    return currentPage === page ? \"secondary\" : \"inherit\";\n  };\n\n  return (\n    <div>\n      <ListItem button onClick={() => navigate(\"/tracking\")}>\n        <ListItemIcon>\n          <PlaylistAddCheckIcon color={pageColor(\"Tracking\")} />\n        </ListItemIcon>\n        <ListItemText primary=\"Tracking\" />\n      </ListItem>\n\n      <ListItem button onClick={() => navigate(\"/actions\")}>\n        <ListItemIcon>\n          <ListAltIcon color={pageColor(\"Actions\")} />\n        </ListItemIcon>\n        <ListItemText primary=\"Actions\" />\n      </ListItem>\n\n      {/* <ListItem button onClick={() => navigate(\"/dashboard\")}>\n        <ListItemIcon>\n          <EqualizerIcon color={pageColor(\"Dashboard\")} />\n        </ListItemIcon>\n        <ListItemText primary=\"Dashboard\" />\n      </ListItem> */}\n\n      <ListItem button onClick={() => navigate(\"/account\")}>\n        <ListItemIcon>\n          <PersonIcon color={pageColor(\"Account\")} />\n        </ListItemIcon>\n        <ListItemText primary=\"Account\" />\n      </ListItem>\n    </div>\n  );\n};\n\nexport const SecondaryListItems = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const [logoutDialog, setLogoutDialog] = useState(false);\n\n  const logout = () => {\n    dispatch(authActions.authOut());\n    history.push(\"/\");\n  };\n\n  return (\n    <div>\n      <ListItem button onClick={() => setLogoutDialog(true)}>\n        <ListItemIcon>\n          <ExitToAppIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Log Out\" />\n      </ListItem>\n\n      <Dialog open={logoutDialog} onClose={() => setLogoutDialog(false)}>\n        <DialogTitle>Log Out</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Are you sure you want to log out?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setLogoutDialog(false)} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button onClick={logout} color=\"primary\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\nav\\NavBar.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\nav\\NavDrawer.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\tracking\\TrackingPage.tsx",["224"],"import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Fab, Box, Paper, makeStyles } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nimport TrackCalendar from \"./components/TrackCalendar\";\r\nimport TrackingList from \"./components/TrackingList\";\r\nimport * as trackingActions from \"../../redux/actions/tracking\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fab: {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    bottom: theme.spacing(3),\r\n    right: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst TrackingPage = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const addAction = () => {\r\n    history.push(\"/actions?type=form\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(trackingActions.fetchRecords());\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Fab\r\n        color=\"secondary\"\r\n        aria-label=\"add\"\r\n        className={classes.fab}\r\n        onClick={addAction}\r\n      >\r\n        <AddIcon />\r\n      </Fab>\r\n      <Box borderRadius={4}>\r\n        <Paper elevation={0}>\r\n          <TrackCalendar />\r\n          <TrackingList />\r\n        </Paper>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TrackingPage;\r\n","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\actions\\components\\ActionList.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\redux\\reducers\\action.ts",["225"],"import { ActionState } from \"../redux\";\r\n\r\nimport * as actionTypes from \"../actionTypes\";\r\n\r\nconst initialState: ActionState = {\r\n  actionList: [],\r\n  actionListLoading: false,\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.ACTION_LIST_LOADING:\r\n      return { ...state, actionListLoading: true };\r\n    case actionTypes.ACTION_LIST_FINISH:\r\n      return { ...state, actionListLoading: false };\r\n    case actionTypes.UPDATE_ACTION_LIST:\r\n      return { ...state, actionList: payload.actionList };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\redux\\actions\\action.ts",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\redux\\reducers\\tracking.ts",["226"],"import moment from \"moment\";\r\n\r\nimport { TrackingState } from \"../redux\";\r\nimport * as actionTypes from \"../actionTypes\";\r\nimport config from \"../../utils/config\";\r\n\r\nconst initialState: TrackingState = {\r\n  date: moment().format(config.dateFormat),\r\n  recordList: [],\r\n  recordLoading: false,\r\n  recordError: false,\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.SET_DATE:\r\n      return { ...state, date: payload.date };\r\n    case actionTypes.RECORD_LIST_LOADING:\r\n      return {\r\n        ...state,\r\n        recordLoading: true,\r\n        recordError: false,\r\n        recordList: [],\r\n      };\r\n    case actionTypes.UPDATE_RECORD_LIST:\r\n      return { ...state, recordLoading: false, recordList: payload.recordList };\r\n    case actionTypes.RECORD_LIST_ERROR:\r\n      return { ...state, recordLoading: false, recordError: true };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\redux\\actions\\tracking.tsx",["227"],"import { Dispatch } from \"redux\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport _ from \"lodash\";\r\n\r\nimport * as actionTypes from \"../actionTypes\";\r\nimport { State } from \"../redux\";\r\nimport urls from \"../../utils/urls\";\r\nimport { authHeaders, getErrorData, timeout } from \"../../utils/helper\";\r\nimport ToastMsg from \"../../components/ui/ToastMsg\";\r\n\r\nexport const fetchRecords = () => {\r\n  return async (dispatch: Dispatch, getState: () => State) => {\r\n    dispatch({ type: actionTypes.RECORD_LIST_LOADING });\r\n    const { date } = getState().tracking;\r\n\r\n    try {\r\n      const { data } = await axios.get(urls.actionRecord, {\r\n        headers: authHeaders(getState()),\r\n        params: { date },\r\n      });\r\n      dispatch({\r\n        type: actionTypes.UPDATE_RECORD_LIST,\r\n        payload: { recordList: data },\r\n      });\r\n    } catch (error) {\r\n      const result = error?.response?.data;\r\n      const body = getErrorData(result?.data);\r\n      toast.error(<ToastMsg title={result?.message} body={body} />);\r\n      dispatch({ type: actionTypes.RECORD_LIST_ERROR });\r\n    }\r\n  };\r\n};\r\n\r\nexport const setDate = (date: string) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: actionTypes.SET_DATE,\r\n      payload: { date },\r\n    });\r\n\r\n    return dispatch(fetchRecords() as any);\r\n  };\r\n};\r\n\r\nexport const doneRecord = (actionId: string, type = \"done\") => {\r\n  return async (dispatch: Dispatch, getState: () => State) => {\r\n    const { date } = getState().tracking;\r\n    try {\r\n      const { data: axiosData } = await axios.post(\r\n        urls.actionRecord,\r\n        { id: actionId, date, type },\r\n        { headers: authHeaders(getState()) }\r\n      );\r\n      const { data } = axiosData;\r\n\r\n      const recordList = _.cloneDeep(getState().tracking.recordList);\r\n      const index = recordList.findIndex((record) => {\r\n        return record.id === actionId;\r\n      });\r\n      if (index !== -1) {\r\n        recordList[index].done = data.done;\r\n      }\r\n\r\n      dispatch({\r\n        type: actionTypes.UPDATE_RECORD_LIST,\r\n        payload: { recordList },\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"something\");\r\n    }\r\n  };\r\n};\r\n","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\tracking\\components\\TrackCalendar.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\tracking\\components\\TrackingList.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\account\\AccountPage.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\account\\components\\InfoForm.tsx",["228"],"import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\n\r\nimport { State } from \"../../../redux/redux\";\r\nimport { authHeaders, errorText, getErrorData } from \"../../../utils/helper\";\r\nimport urls from \"../../../utils/urls\";\r\nimport Title from \"../../../components/ui/Title\";\r\nimport ToastMsg from \"../../../components/ui/ToastMsg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(3),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n}));\r\n\r\nconst schema = yup.object().shape({\r\n  firstName: yup.string().required(),\r\n  lastName: yup.string().required(),\r\n  email: yup.string().required().email(),\r\n});\r\n\r\nconst InfoForm = () => {\r\n  const classes = useStyles();\r\n  const { control, handleSubmit, errors, setValue } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const state = useSelector((state: State) => state);\r\n  const { token } = state.auth;\r\n\r\n  const onSubmit = async (formData) => {\r\n    setLoading(true);\r\n    try {\r\n      const { data } = await axios.put(\r\n        urls.changeInfo,\r\n        { ...formData },\r\n        { headers: authHeaders(state) }\r\n      );\r\n      toast.success(<ToastMsg title={data.message} body={data.body} />);\r\n    } catch (error) {\r\n      const result = error.response.data;\r\n      const body = getErrorData(result.data);\r\n      toast.error(<ToastMsg title={result.message} body={body} />);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchInfo = async () => {\r\n      try {\r\n        const { data } = await axios.get(urls.getInfo, {\r\n          headers: authHeaders(state),\r\n        });\r\n        setValue(\"firstName\", data.firstName);\r\n        setValue(\"lastName\", data.lastName);\r\n        setValue(\"email\", data.email);\r\n      } catch (error) {\r\n        const result = error.response.data;\r\n        const body = getErrorData(result.data);\r\n        toast.error(<ToastMsg title={result.message} body={body} />);\r\n      }\r\n    };\r\n\r\n    if (token) fetchInfo();\r\n  }, [token]);\r\n\r\n  return (\r\n    <form noValidate onSubmit={handleSubmit(onSubmit)}>\r\n      <Paper className={classes.paper}>\r\n        <Title>Personal Information</Title>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={4}>\r\n            <Typography variant=\"body2\">\r\n              You can update your personal information here.\r\n              <br />\r\n              Email cannot be changed once account is created.\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={8}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <Controller\r\n                  as={TextField}\r\n                  name=\"firstName\"\r\n                  label=\"First Name\"\r\n                  control={control}\r\n                  defaultValue=\"\"\r\n                  required\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  error={!!errors?.firstName}\r\n                  helperText={errorText(errors, \"firstName\")}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Controller\r\n                  as={TextField}\r\n                  name=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  control={control}\r\n                  defaultValue=\"\"\r\n                  required\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  error={!!errors?.lastName}\r\n                  helperText={errorText(errors, \"lastName\")}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Controller\r\n                  as={TextField}\r\n                  name=\"email\"\r\n                  label=\"Email Address\"\r\n                  control={control}\r\n                  defaultValue=\"\"\r\n                  required\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  disabled\r\n                  error={!!errors?.email}\r\n                  helperText={errorText(errors, \"email\")}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  disabled={loading}\r\n                >\r\n                  {loading ? \"Loading\" : \"Update\"}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default InfoForm;\r\n","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\account\\components\\PasswordForm.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\account\\components\\DeleteForm.tsx",["229","230","231","232"],"import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nimport Title from \"../../../components/ui/Title\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(3),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n}));\r\n\r\nconst schema = yup.object().shape({\r\n  password: yup.string().required(),\r\n});\r\n\r\nconst DeleteForm = () => {\r\n  const classes = useStyles();\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n\r\n  const deleteAccount = async () => {};\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.paper}>\r\n        <Title>Delete Account</Title>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={4}>\r\n            <Typography variant=\"body2\">\r\n              Lorem Ipsum is simply dummy text of the printing and typesetting\r\n              industry.\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={8}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={deleteAccount}\r\n                  >\r\n                    Delete Account\r\n                  </Button>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n\r\n      <Dialog open={deleteDialog} onClose={() => setDeleteDialog(false)}>\r\n        <DialogTitle>Log Out</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Are you sure you want to delete your account permanently?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setDeleteDialog(false)} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={deleteAccount} color=\"primary\" autoFocus>\r\n            OK\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeleteForm;\r\n",{"ruleId":"233","severity":1,"message":"234","line":30,"column":6,"nodeType":"235","endLine":30,"endColumn":8,"suggestions":"236"},{"ruleId":"237","severity":1,"message":"238","line":4,"column":8,"nodeType":"239","messageId":"240","endLine":4,"endColumn":19},{"ruleId":"237","severity":1,"message":"241","line":5,"column":8,"nodeType":"239","messageId":"240","endLine":5,"endColumn":14},{"ruleId":"237","severity":1,"message":"242","line":6,"column":8,"nodeType":"239","messageId":"240","endLine":6,"endColumn":11},{"ruleId":"237","severity":1,"message":"243","line":7,"column":8,"nodeType":"239","messageId":"240","endLine":7,"endColumn":14},{"ruleId":"237","severity":1,"message":"244","line":8,"column":8,"nodeType":"239","messageId":"240","endLine":8,"endColumn":15},{"ruleId":"237","severity":1,"message":"245","line":9,"column":8,"nodeType":"239","messageId":"240","endLine":9,"endColumn":14},{"ruleId":"237","severity":1,"message":"246","line":10,"column":8,"nodeType":"239","messageId":"240","endLine":10,"endColumn":12},{"ruleId":"237","severity":1,"message":"247","line":11,"column":8,"nodeType":"239","messageId":"240","endLine":11,"endColumn":18},{"ruleId":"237","severity":1,"message":"248","line":12,"column":8,"nodeType":"239","messageId":"240","endLine":12,"endColumn":15},{"ruleId":"237","severity":1,"message":"249","line":13,"column":8,"nodeType":"239","messageId":"240","endLine":13,"endColumn":18},{"ruleId":"237","severity":1,"message":"250","line":14,"column":8,"nodeType":"239","messageId":"240","endLine":14,"endColumn":13},{"ruleId":"237","severity":1,"message":"251","line":15,"column":8,"nodeType":"239","messageId":"240","endLine":15,"endColumn":17},{"ruleId":"237","severity":1,"message":"252","line":18,"column":8,"nodeType":"239","messageId":"240","endLine":18,"endColumn":12},{"ruleId":"237","severity":1,"message":"253","line":19,"column":8,"nodeType":"239","messageId":"240","endLine":19,"endColumn":16},{"ruleId":"237","severity":1,"message":"254","line":20,"column":8,"nodeType":"239","messageId":"240","endLine":20,"endColumn":23},{"ruleId":"237","severity":1,"message":"255","line":25,"column":8,"nodeType":"239","messageId":"240","endLine":25,"endColumn":15},{"ruleId":"237","severity":1,"message":"256","line":120,"column":9,"nodeType":"239","messageId":"240","endLine":120,"endColumn":21},{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","severity":1,"message":"262","line":3,"column":1,"nodeType":"263","endLine":11,"endColumn":3},{"ruleId":"233","severity":1,"message":"264","line":143,"column":6,"nodeType":"235","endLine":143,"endColumn":8,"suggestions":"265"},{"ruleId":"233","severity":1,"message":"266","line":187,"column":6,"nodeType":"235","endLine":187,"endColumn":14,"suggestions":"267"},{"ruleId":"268","severity":1,"message":"269","line":51,"column":9,"nodeType":"270","endLine":55,"endColumn":11},{"ruleId":"261","severity":1,"message":"271","line":10,"column":1,"nodeType":"263","endLine":21,"endColumn":3},{"ruleId":"261","severity":1,"message":"262","line":5,"column":1,"nodeType":"263","endLine":14,"endColumn":3},{"ruleId":"237","severity":1,"message":"272","line":15,"column":8,"nodeType":"239","messageId":"240","endLine":15,"endColumn":21},{"ruleId":"233","severity":1,"message":"234","line":31,"column":6,"nodeType":"235","endLine":31,"endColumn":8,"suggestions":"273"},{"ruleId":"261","severity":1,"message":"271","line":10,"column":1,"nodeType":"263","endLine":21,"endColumn":3},{"ruleId":"261","severity":1,"message":"271","line":14,"column":1,"nodeType":"263","endLine":32,"endColumn":3},{"ruleId":"237","severity":1,"message":"274","line":9,"column":37,"nodeType":"239","messageId":"240","endLine":9,"endColumn":44},{"ruleId":"233","severity":1,"message":"275","line":82,"column":6,"nodeType":"235","endLine":82,"endColumn":13,"suggestions":"276"},{"ruleId":"237","severity":1,"message":"277","line":2,"column":10,"nodeType":"239","messageId":"240","endLine":2,"endColumn":21},{"ruleId":"237","severity":1,"message":"278","line":16,"column":10,"nodeType":"239","messageId":"240","endLine":16,"endColumn":17},{"ruleId":"237","severity":1,"message":"279","line":17,"column":10,"nodeType":"239","messageId":"240","endLine":17,"endColumn":21},{"ruleId":"237","severity":1,"message":"280","line":31,"column":7,"nodeType":"239","messageId":"240","endLine":31,"endColumn":13},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["281"],"@typescript-eslint/no-unused-vars","'CssBaseline' is defined but never used.","Identifier","unusedVar","'Drawer' is defined but never used.","'Box' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Avatar' is defined but never used.","'List' is defined but never used.","'Typography' is defined but never used.","'Divider' is defined but never used.","'IconButton' is defined but never used.","'Badge' is defined but never used.","'Container' is defined but never used.","'Link' is defined but never used.","'MenuIcon' is defined but never used.","'ChevronLeftIcon' is defined but never used.","'AppIcon' is defined but never used.","'toggleDrawer' is assigned a value but never used.","no-native-reassign",["282"],"no-negated-in-lhs",["283"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'dispatch' and 'query'. Either include them or remove the dependency array.",["284"],"React Hook useEffect has a missing dependency: 'resetValues'. Either include it or remove the dependency array.",["285"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Assign arrow function to a variable before exporting as module default","'EqualizerIcon' is defined but never used.",["286"],"'timeout' is defined but never used.","React Hook useEffect has missing dependencies: 'setValue' and 'state'. Either include them or remove the dependency array.",["287"],"'useDispatch' is defined but never used.","'useForm' is defined but never used.","'yupResolver' is defined but never used.","'schema' is assigned a value but never used.",{"desc":"288","fix":"289"},"no-global-assign","no-unsafe-negation",{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"288","fix":"294"},{"desc":"295","fix":"296"},"Update the dependencies array to be: [dispatch]",{"range":"297","text":"298"},"Update the dependencies array to be: [dispatch, query]",{"range":"299","text":"300"},"Update the dependencies array to be: [isOpen, resetValues]",{"range":"301","text":"302"},{"range":"303","text":"298"},"Update the dependencies array to be: [setValue, state, token]",{"range":"304","text":"305"},[1023,1025],"[dispatch]",[4053,4055],"[dispatch, query]",[5824,5832],"[isOpen, resetValues]",[878,880],[2415,2422],"[setValue, state, token]"]