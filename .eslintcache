[{"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\index.tsx":"1","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\App.tsx":"2","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\DashboardPage.tsx":"3","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\listItems.tsx":"4","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\Title.tsx":"5","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\AppIcon.tsx":"6","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\utils\\config.tsx":"7","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\Copyright.tsx":"8","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\containers\\NavWrapper.tsx":"9","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\AccountPage.tsx":"10","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\ProgressBar.tsx":"11","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\tracking\\Page.tsx":"12","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\tracking\\components\\ActionCalendar.tsx":"13","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\tracking\\components\\ActionList.tsx":"14","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\tracking\\components\\ActionCard.tsx":"15","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\actions\\ActionPage.tsx":"16","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\actions\\components\\ActionForm.tsx":"17","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\actions\\components\\ColorButton.tsx":"18","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\actions\\components\\IconButton.tsx":"19","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\actions\\components\\WeekdayButton.tsx":"20","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\utils\\theme.tsx":"21","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\auth\\AuthPage.tsx":"22","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\hooks\\useMobile.tsx":"23","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\auth\\components\\AuthBanner.tsx":"24","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\auth\\components\\AuthForm.tsx":"25","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\utils\\helper.tsx":"26","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\redux\\store.tsx":"27","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\redux\\reducers\\auth.ts":"28","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\redux\\actionTypes.ts":"29","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\redux\\actions\\auth.ts":"30","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\utils\\urls.tsx":"31","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\ToastMsg.tsx":"32","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\Loading.tsx":"33","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\temp\\Chart.tsx":"34","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\temp\\Orders.tsx":"35","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\temp\\Deposits.tsx":"36"},{"size":959,"mtime":1609940531975,"results":"37","hashOfConfig":"38"},{"size":2003,"mtime":1609945785443,"results":"39","hashOfConfig":"38"},{"size":4357,"mtime":1609946398565,"results":"40","hashOfConfig":"38"},{"size":2250,"mtime":1609923303818,"results":"41","hashOfConfig":"38"},{"size":438,"mtime":1609922818646,"results":"42","hashOfConfig":"38"},{"size":1079,"mtime":1609946365537,"results":"43","hashOfConfig":"38"},{"size":209,"mtime":1609939435062,"results":"44","hashOfConfig":"38"},{"size":581,"mtime":1609913843389,"results":"45","hashOfConfig":"38"},{"size":6867,"mtime":1609946397781,"results":"46","hashOfConfig":"38"},{"size":5860,"mtime":1609922857186,"results":"47","hashOfConfig":"38"},{"size":537,"mtime":1609856244371,"results":"48","hashOfConfig":"38"},{"size":1394,"mtime":1609912941872,"results":"49","hashOfConfig":"38"},{"size":4521,"mtime":1609912249032,"results":"50","hashOfConfig":"38"},{"size":497,"mtime":1609912160437,"results":"51","hashOfConfig":"38"},{"size":4813,"mtime":1609913748138,"results":"52","hashOfConfig":"38"},{"size":6143,"mtime":1609924247183,"results":"53","hashOfConfig":"38"},{"size":5693,"mtime":1609923834859,"results":"54","hashOfConfig":"38"},{"size":708,"mtime":1609919071125,"results":"55","hashOfConfig":"38"},{"size":899,"mtime":1609920025253,"results":"56","hashOfConfig":"38"},{"size":702,"mtime":1609923858162,"results":"57","hashOfConfig":"38"},{"size":309,"mtime":1609926714610,"results":"58","hashOfConfig":"38"},{"size":714,"mtime":1609945941451,"results":"59","hashOfConfig":"38"},{"size":236,"mtime":1609943068090,"results":"60","hashOfConfig":"38"},{"size":2553,"mtime":1609946072700,"results":"61","hashOfConfig":"38"},{"size":8649,"mtime":1609946272808,"results":"62","hashOfConfig":"38"},{"size":641,"mtime":1609942231872,"results":"63","hashOfConfig":"38"},{"size":483,"mtime":1609938516659,"results":"64","hashOfConfig":"38"},{"size":586,"mtime":1609944453541,"results":"65","hashOfConfig":"38"},{"size":115,"mtime":1609944439733,"results":"66","hashOfConfig":"38"},{"size":1507,"mtime":1609944692223,"results":"67","hashOfConfig":"38"},{"size":205,"mtime":1609944554625,"results":"68","hashOfConfig":"38"},{"size":560,"mtime":1609941530631,"results":"69","hashOfConfig":"38"},{"size":467,"mtime":1609945471148,"results":"70","hashOfConfig":"38"},{"size":1573,"mtime":1609946343206,"results":"71","hashOfConfig":"38"},{"size":2583,"mtime":1609946396169,"results":"72","hashOfConfig":"38"},{"size":871,"mtime":1609946396962,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"tkoe18",{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"76"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\index.tsx",[],["160","161"],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\App.tsx",["162"],"import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport AuthPage from \"./pages/auth/AuthPage\";\nimport NavWrapper from \"./containers/NavWrapper\";\nimport TrackingPage from \"./pages/tracking/Page\";\nimport ActionPage from \"./pages/actions/ActionPage\";\nimport DashboardPage from \"./pages/DashboardPage\";\nimport AccountPage from \"./pages/AccountPage\";\n\nimport * as authActions from \"./redux/actions/auth\";\nimport { State } from \"./redux/store.d\";\nimport Loading from \"./components/Loading\";\n\nconst GuardedRoute = ({ children, auth, redirect, ...rest }) => (\n  <Route\n    {...rest}\n    render={() => (auth ? children : <Redirect to={redirect} />)}\n  />\n);\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const { token, tokenCheck } = useSelector((state: State) => state.auth);\n\n  useEffect(() => {\n    dispatch(authActions.tokenLogin());\n  }, []);\n\n  if (!tokenCheck) {\n    return <Loading />;\n  }\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <GuardedRoute path=\"/tracking\" auth={!!token} redirect=\"/\">\n          <NavWrapper pageTitle=\"Tracking\">\n            <TrackingPage />\n          </NavWrapper>\n        </GuardedRoute>\n        <GuardedRoute path=\"/actions\" auth={!!token} redirect=\"/\">\n          <NavWrapper pageTitle=\"Actions\">\n            <ActionPage />\n          </NavWrapper>\n        </GuardedRoute>\n        <GuardedRoute path=\"/dashboard\" auth={!!token} redirect=\"/\">\n          <NavWrapper pageTitle=\"Dashboard\">\n            <DashboardPage />\n          </NavWrapper>\n        </GuardedRoute>\n        <GuardedRoute path=\"/account\" auth={!!token} redirect=\"/\">\n          <NavWrapper pageTitle=\"Account\">\n            <AccountPage />\n          </NavWrapper>\n        </GuardedRoute>\n        <GuardedRoute path=\"/\" exact auth={!token} redirect=\"/tracking\">\n          <AuthPage />\n        </GuardedRoute>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\DashboardPage.tsx",["163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179"],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\listItems.tsx",["180"],"import ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const MainListItems = ({ currentPage, onClick }) => {\n  const history = useHistory();\n\n  const navigate = (path: string) => {\n    history.push(path);\n    onClick();\n  };\n\n  const pageColor = (page: string): \"secondary\" | \"inherit\" => {\n    return currentPage === page ? \"secondary\" : \"inherit\";\n  };\n\n  return (\n    <div>\n      <ListItem button onClick={() => navigate(\"/tracking\")}>\n        <ListItemIcon>\n          <PlaylistAddCheckIcon color={pageColor(\"Tracking\")} />\n        </ListItemIcon>\n        <ListItemText primary=\"Tracking\" />\n      </ListItem>\n\n      <ListItem button onClick={() => navigate(\"/actions\")}>\n        <ListItemIcon>\n          <ListAltIcon color={pageColor(\"Actions\")} />\n        </ListItemIcon>\n        <ListItemText primary=\"Actions\" />\n      </ListItem>\n\n      <ListItem button onClick={() => navigate(\"/dashboard\")}>\n        <ListItemIcon>\n          <EqualizerIcon color={pageColor(\"Dashboard\")} />\n        </ListItemIcon>\n        <ListItemText primary=\"Dashboard\" />\n      </ListItem>\n\n      <ListItem button onClick={() => navigate(\"/account\")}>\n        <ListItemIcon>\n          <PersonIcon color={pageColor(\"Account\")} />\n        </ListItemIcon>\n        <ListItemText primary=\"Account\" />\n      </ListItem>\n    </div>\n  );\n};\n\nexport const SecondaryListItems = () => {\n  const history = useHistory();\n\n  const logout = () => {\n    history.push(\"/\");\n  };\n\n  return (\n    <div>\n      {/* <ListSubheader inset>Saved reports</ListSubheader> */}\n      <ListItem button onClick={logout}>\n        <ListItemIcon>\n          <ExitToAppIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Log Out\" />\n      </ListItem>\n    </div>\n  );\n};\n","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\Title.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\AppIcon.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\utils\\config.tsx",["181"],"export default {\r\n  appName: \"Trackme\",\r\n  githubName: \"lucaslmlok\",\r\n  githubProfile: \"https://github.com/lucaslmlok\",\r\n  githubRepo: \"https://github.com/lucaslmlo\",\r\n  apiPath: \"http://localhost:5000\",\r\n};\r\n","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\Copyright.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\containers\\NavWrapper.tsx",["182","183","184","185","186","187","188","189","190"],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\AccountPage.tsx",["191","192","193"],"import {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Title from \"../components/Title\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(3),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}));\r\n\r\nconst AccountPage = () => {\r\n  const classes = useStyles();\r\n\r\n  const theme = useTheme();\r\n  const mobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  return (\r\n    <Grid container spacing={6}>\r\n      <Grid item xs={12}>\r\n        <Paper className={classes.paper}>\r\n          <Title>Personal Information</Title>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={4}>\r\n              <Typography variant=\"body2\">\r\n                Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                industry. Lorem Ipsum has been the industry's standard dummy\r\n                text ever since the 1500s.\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={8}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    autoComplete=\"fname\"\r\n                    name=\"firstName\"\r\n                    required\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"firstName\"\r\n                    label=\"First Name\"\r\n                    autoFocus\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    required\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"lastName\"\r\n                    label=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    autoComplete=\"lname\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    required\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Button variant=\"contained\" color=\"primary\">\r\n                    Update\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Paper className={classes.paper}>\r\n          <Title>Change Password</Title>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={4}>\r\n              <Typography variant=\"body2\">\r\n                Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                industry. Lorem Ipsum has been the industry's standard dummy\r\n                text ever since the 1500s.\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={8}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    autoComplete=\"fname\"\r\n                    name=\"firstName\"\r\n                    required\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"firstName\"\r\n                    label=\"Current Password\"\r\n                    autoFocus\r\n                  />\r\n                </Grid>\r\n\r\n                {!mobile && <Grid item xs={12} sm={6}></Grid>}\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    autoComplete=\"fname\"\r\n                    name=\"firstName\"\r\n                    required\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"firstName\"\r\n                    label=\"New Password\"\r\n                    autoFocus\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    required\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"lastName\"\r\n                    label=\"Confirm New Password\"\r\n                    name=\"lastName\"\r\n                    autoComplete=\"lname\"\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <Button variant=\"contained\" color=\"primary\">\r\n                    Change Password\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Paper className={classes.paper}>\r\n          <Title>Delete Account</Title>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={4}>\r\n              <Typography variant=\"body2\">\r\n                Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                industry.\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={8}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                    <Button variant=\"contained\" color=\"secondary\">\r\n                      Delete Account\r\n                    </Button>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AccountPage;\r\n","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\ProgressBar.tsx",[],["194","195"],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\tracking\\Page.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\tracking\\components\\ActionCalendar.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\tracking\\components\\ActionList.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\tracking\\components\\ActionCard.tsx",["196","197","198","199"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport UndoIcon from \"@material-ui/icons/Undo\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport * as colors from \"@material-ui/core/colors\";\r\n\r\nimport ProgressBar from \"../../../components/ProgressBar\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport { List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\r\n\r\ntype Props = {\r\n  name: string;\r\n  type?: \"yesNo\" | \"number\";\r\n  target?: number;\r\n  unit?: string;\r\n  defaultIncrement?: number;\r\n  done?: number;\r\n  color?: string;\r\n  icon?: string;\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // maxWidth: 345,\r\n    // overflow: \"unset\",\r\n  },\r\n  cardMedia: {\r\n    height: 80,\r\n  },\r\n  iconWrapper: {\r\n    height: 110,\r\n    width: 110,\r\n    // backgroundColor: \"rgba(255, 255, 255, 0.4)\",\r\n  },\r\n  icon: {\r\n    fontSize: 70,\r\n  },\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  cardActions: {\r\n    marginTop: -10,\r\n  },\r\n}));\r\n\r\nconst ActionCard = (props: Props) => {\r\n  const { name } = props;\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\r\n    null\r\n  );\r\n\r\n  const handleMore = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <Card className={classes.root} elevation={2}>\r\n      <CardActionArea>\r\n        <Box\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          overflow=\"hidden\"\r\n          className={classes.cardMedia}\r\n          style={{ backgroundColor: colors.orange[200] }}\r\n        >\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            borderRadius=\"50%\"\r\n            className={classes.iconWrapper}\r\n            style={{ backgroundColor: colors.orange[100] }}\r\n          >\r\n            <Icon\r\n              className={classes.icon}\r\n              style={{ color: colors.orange[500] }}\r\n            >\r\n              people\r\n            </Icon>\r\n          </Box>\r\n        </Box>\r\n        <CardContent>\r\n          <Box display=\"flex\" justifyContent=\"space-between\">\r\n            <Typography variant=\"body1\" color=\"textPrimary\">\r\n              {name}\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textPrimary\">\r\n              6 / 8 Cups\r\n            </Typography>\r\n          </Box>\r\n          <Box mt={1}>\r\n            <ProgressBar variant=\"determinate\" value={60} />\r\n          </Box>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Box\r\n          m={1}\r\n          className={classes.cardActions}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          width={1}\r\n        >\r\n          <Button color=\"primary\" variant=\"contained\">\r\n            <Box fontWeight=\"fontWeightBold\">Done</Box>\r\n          </Button>\r\n          <IconButton\r\n            edge=\"end\"\r\n            color=\"primary\"\r\n            style={{ marginLeft: \"auto\" }}\r\n            onClick={handleMore}\r\n            aria-describedby={id}\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n          <Popover\r\n            id={id}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={handleClose}\r\n            anchorOrigin={{\r\n              vertical: \"bottom\",\r\n              horizontal: \"center\",\r\n            }}\r\n            transformOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"center\",\r\n            }}\r\n          >\r\n            <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n              <ListItem button>\r\n                <ListItemText primary=\"Undo\" />\r\n              </ListItem>\r\n              <ListItem button>\r\n                <ListItemText primary=\"Undo All\" />\r\n              </ListItem>\r\n              <ListItem button>\r\n                <ListItemText primary=\"Edit\" />\r\n              </ListItem>\r\n            </List>\r\n          </Popover>\r\n        </Box>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ActionCard;\r\n","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\actions\\ActionPage.tsx",["200","201","202","203","204"],"import React, { useState } from \"react\";\r\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport {\r\n  AppBar,\r\n  Backdrop,\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Fab,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Slide,\r\n  Toolbar,\r\n  Typography,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { TransitionProps } from \"@material-ui/core/transitions\";\r\n\r\nimport ActionForm from \"./components/ActionForm\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n      // maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    fab: {\r\n      position: \"absolute\",\r\n      zIndex: 1,\r\n      bottom: theme.spacing(3),\r\n      right: theme.spacing(3),\r\n    },\r\n    backdrop: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      color: \"#fff\",\r\n    },\r\n    appBar: {\r\n      position: \"relative\",\r\n    },\r\n    title: {\r\n      marginLeft: theme.spacing(2),\r\n      flex: 1,\r\n    },\r\n  })\r\n);\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & { children?: React.ReactElement },\r\n  ref: React.Ref<unknown>\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst list = new Array(10).fill(\"abc\");\r\n\r\nexport default function FolderList() {\r\n  const classes = useStyles();\r\n\r\n  const theme = useTheme();\r\n  const mobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [deleteOpen, setDeleteOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClickDeleteOpen = () => {\r\n    setDeleteOpen(true);\r\n  };\r\n\r\n  const handleDeleteClose = () => {\r\n    setDeleteOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Fab\r\n        color=\"secondary\"\r\n        aria-label=\"add\"\r\n        className={classes.fab}\r\n        onClick={handleClickOpen}\r\n      >\r\n        <AddIcon />\r\n      </Fab>\r\n      <Dialog\r\n        fullScreen={mobile}\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Add Action\r\n            </Typography>\r\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <ActionForm />\r\n      </Dialog>\r\n      <Dialog\r\n        open={deleteOpen}\r\n        onClose={handleDeleteClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Use Google's location service?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Let Google help apps determine location. This means sending\r\n            anonymous location data to Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleDeleteClose} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Box mt={-1} pb={2} display=\"flex\" justifyContent=\"flex-start\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          disabled\r\n          startIcon={<DeleteIcon />}\r\n        >\r\n          Delete Selected\r\n        </Button>\r\n      </Box>\r\n      <List className={classes.root}>\r\n        {list.map((_, index) => (\r\n          <>\r\n            {index > 0 && <Divider variant=\"inset\" component=\"li\" />}\r\n            <ListItem button key={index}>\r\n              <ListItemIcon>\r\n                <Checkbox checked={false} tabIndex={-1} disableRipple />\r\n              </ListItemIcon>\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <ImageIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary=\"Photos\" secondary=\"Jan 9, 2014\" />\r\n              <ListItemSecondaryAction>\r\n                <IconButton\r\n                  size={mobile ? \"small\" : \"medium\"}\r\n                  color=\"secondary\"\r\n                  onClick={handleClickOpen}\r\n                >\r\n                  <EditIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                  edge={mobile ? \"end\" : false}\r\n                  size={mobile ? \"small\" : \"medium\"}\r\n                  aria-label=\"delete\"\r\n                  onClick={handleClickDeleteOpen}\r\n                >\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          </>\r\n        ))}\r\n      </List>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\actions\\components\\ActionForm.tsx",["205","206","207","208","209","210"],"import * as React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  ButtonBase,\r\n  createStyles,\r\n  FormControl,\r\n  FormLabel,\r\n  IconButton,\r\n  makeStyles,\r\n  Radio,\r\n  RadioGroup,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport moment from \"moment\";\r\nimport ColorButton from \"./ColorButton\";\r\nimport ActionIconButton from \"./IconButton\";\r\nimport WeekdayButton from \"./WeekdayButton\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({}));\r\n\r\nconst colorList = new Array(12).fill(\"abc\");\r\nconst weekDayList = new Array(7).fill(\"abc\");\r\n\r\nexport default function AddressForm() {\r\n  const classes = useStyles();\r\n\r\n  const selectedDate = moment();\r\n\r\n  return (\r\n    <Box px={4} pt={3} pb={6}>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Shipping address\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            required\r\n            id=\"address1\"\r\n            name=\"address1\"\r\n            label=\"Action Name\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-line1\"\r\n            variant=\"standard\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box mb={-2}>\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel component=\"legend\">Action Type</FormLabel>\r\n              <RadioGroup\r\n                aria-label=\"gender\"\r\n                name=\"gender1\"\r\n                value=\"female\"\r\n                style={{ flexDirection: \"row\" }}\r\n                onChange={() => {}}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"female\"\r\n                  control={<Radio />}\r\n                  label=\"Done / Undone\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"male\"\r\n                  control={<Radio />}\r\n                  label=\"Quantity Fullfill\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            type=\"number\"\r\n            id=\"city\"\r\n            name=\"city\"\r\n            label=\"Quantity Target\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-level2\"\r\n            variant=\"standard\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            type=\"number\"\r\n            id=\"city\"\r\n            name=\"city\"\r\n            label=\"Increment\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-level2\"\r\n            variant=\"standard\"\r\n          />{\" \"}\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"zip\"\r\n            name=\"zip\"\r\n            label=\"Unit\"\r\n            fullWidth\r\n            autoComplete=\"shipping postal-code\"\r\n            variant=\"standard\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\">Action Color</FormLabel>\r\n            <Box display=\"flex\" flexWrap=\"wrap\" mx={-1} mt={1}>\r\n              {colorList.map((_, index) => (\r\n                <ColorButton key={index} />\r\n              ))}\r\n            </Box>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\">Action Icon</FormLabel>\r\n            <Box display=\"flex\" flexWrap=\"wrap\" mx={-1} mt={1}>\r\n              {colorList.map((_, index) => (\r\n                <ActionIconButton key={index} />\r\n              ))}\r\n            </Box>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <MuiPickersUtilsProvider utils={MomentUtils}>\r\n          <Grid item xs={12} sm={6}>\r\n            <KeyboardDatePicker\r\n              disableToolbar\r\n              fullWidth\r\n              variant=\"inline\"\r\n              format=\"DD/MM/yyyy\"\r\n              margin=\"normal\"\r\n              id=\"date-picker-inline\"\r\n              label=\"Starting Date\"\r\n              value={selectedDate}\r\n              onChange={() => {}}\r\n              KeyboardButtonProps={{\r\n                \"aria-label\": \"change date\",\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <KeyboardDatePicker\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id=\"date-picker-dialog\"\r\n              label=\"Ending Date\"\r\n              format=\"DD/MM/yyyy\"\r\n              value={null}\r\n              onChange={() => {}}\r\n              KeyboardButtonProps={{\r\n                \"aria-label\": \"change date\",\r\n              }}\r\n            />\r\n          </Grid>\r\n        </MuiPickersUtilsProvider>\r\n        <Grid item xs={12}>\r\n          <FormControl component=\"fieldset\" fullWidth>\r\n            <FormLabel component=\"legend\">Action Weekdays</FormLabel>\r\n            <Box\r\n              display=\"flex\"\r\n              // justifyContent=\"space-evenly\"\r\n              flexWrap=\"wrap\"\r\n              mx={-1}\r\n              mt={1}\r\n            >\r\n              {weekDayList.map((_, index) => (\r\n                <WeekdayButton key={index} />\r\n              ))}\r\n            </Box>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\actions\\components\\ColorButton.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\actions\\components\\IconButton.tsx",["211","212","213"],"import { Box, createStyles, Fab, makeStyles, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport * as colors from \"@material-ui/core/colors\";\r\n\r\ntype Props = {\r\n  color?: string;\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  colorButton: {\r\n    padding: 6,\r\n  },\r\n  fab: {\r\n    backgroundColor: ({ color }: any) => colors[color][300],\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: ({ color }: any) => colors[color][500],\r\n    },\r\n  },\r\n  icon: {\r\n    color: \"white\",\r\n  },\r\n});\r\n\r\nconst ColorButton = (props: Props) => {\r\n  const { color } = props;\r\n  const classes = useStyles({ color: \"green\" });\r\n\r\n  return (\r\n    <Box className={classes.colorButton}>\r\n      <Fab size=\"small\" classes={{ root: classes.fab }}>\r\n        <CheckIcon className={classes.icon} />\r\n      </Fab>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorButton;\r\n","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\actions\\components\\WeekdayButton.tsx",["214"],"import {\r\n  Box,\r\n  createStyles,\r\n  Fab,\r\n  makeStyles,\r\n  Theme,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    colorButton: {\r\n      padding: 6,\r\n    },\r\n    fab: {},\r\n  })\r\n);\r\n\r\nconst ColorButton = () => {\r\n  const classes = useStyles();\r\n\r\n  const theme = useTheme();\r\n  const mobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  return (\r\n    <Box className={classes.colorButton}>\r\n      <Fab size={mobile ? \"medium\" : \"medium\"} classes={{}}>\r\n        Mon\r\n      </Fab>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorButton;\r\n","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\utils\\theme.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\auth\\AuthPage.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\hooks\\useMobile.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\auth\\components\\AuthBanner.tsx",["215"],"import { Box, Typography, makeStyles } from \"@material-ui/core\";\r\n\r\nimport useMobile from \"../../../hooks/useMobile\";\r\nimport AppIcon from \"../../../components/AppIcon\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  banner: {\r\n    position: \"absolute\",\r\n    zIndex: -1,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    objectFit: \"cover\",\r\n  },\r\n  bannerOverlay: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"rgba(22, 9, 44, 0.6)\",\r\n  },\r\n  bannerText: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    display: \"inline\",\r\n    letterSpacing: 2,\r\n  },\r\n  colorBannerText: {\r\n    fontWeight: \"bold\",\r\n    display: \"inline\",\r\n    letterSpacing: 2,\r\n  },\r\n  bannerDesc: {\r\n    color: \"#ddd\",\r\n  },\r\n}));\r\n\r\nconst AuthBanner = () => {\r\n  const classes = useStyles();\r\n  const isMobile = useMobile();\r\n\r\n  return (\r\n    <>\r\n      <Box position=\"relative\" width={1} height={1}>\r\n        <video\r\n          autoPlay\r\n          loop\r\n          muted\r\n          className={classes.banner}\r\n          style={{ display: isMobile ? \"none\" : \"block\" }}\r\n        >\r\n          <source src=\"banner.mp4\" type=\"video/mp4\" />\r\n        </video>\r\n        <img\r\n          src=\"banner.jpg\"\r\n          className={classes.banner}\r\n          style={{ display: isMobile ? \"block\" : \"none\" }}\r\n        />\r\n        <Box\r\n          className={classes.bannerOverlay}\r\n          px={isMobile ? 4 : 12}\r\n          py={isMobile ? 4 : 8}\r\n        >\r\n          <Box display=\"flex\" width={1} mb={isMobile ? 2 : 6}>\r\n            <AppIcon titleColor=\"white\" size={isMobile ? \"default\" : \"large\"} />\r\n          </Box>\r\n          <Typography\r\n            variant=\"h2\"\r\n            className={classes.bannerText}\r\n            style={{ fontSize: isMobile ? 30 : 60 }}\r\n          >\r\n            <Typography\r\n              color=\"secondary\"\r\n              className={classes.colorBannerText}\r\n              style={{ fontSize: isMobile ? 30 : 60 }}\r\n            >\r\n              Track\r\n            </Typography>{\" \"}\r\n            Your Life\r\n            <br />\r\n            Seamlessly.\r\n          </Typography>\r\n          <Box\r\n            className={classes.bannerDesc}\r\n            mt={isMobile ? 2 : 6}\r\n            style={{\r\n              fontSize: isMobile ? 16 : 20,\r\n              lineHeight: isMobile ? 1.8 : 2,\r\n            }}\r\n          >\r\n            A productivity tools helps people monitor their\r\n            <br />\r\n            and do their best work by being effective.\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthBanner;\r\n","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\pages\\auth\\components\\AuthForm.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\utils\\helper.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\redux\\store.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\redux\\reducers\\auth.ts",["216"],"import { AuthState } from \"../store.d\";\r\nimport * as actionTypes from \"../actionTypes\";\r\n\r\nconst initialState: AuthState = {\r\n  tokenCheck: false,\r\n  token: null,\r\n  userId: null,\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.TOKEN_CHECK:\r\n      return { ...state, tokenCheck: true };\r\n    case actionTypes.AUTH_IN:\r\n      return { ...state, token: payload.token, userId: payload.userId };\r\n    case actionTypes.AUTH_OUT:\r\n      return { ...state, token: null, userId: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\redux\\actionTypes.ts",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\redux\\actions\\auth.ts",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\utils\\urls.tsx",["217"],"import config from \"./config\";\r\n\r\nconst { apiPath } = config;\r\n\r\nexport default {\r\n  signup: apiPath + \"/user/signup\",\r\n  login: apiPath + \"/user/login\",\r\n  tokenLogin: apiPath + \"/user/token-login\",\r\n};\r\n","C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\ToastMsg.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\Loading.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\temp\\Chart.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\temp\\Orders.tsx",[],"C:\\Users\\lucas\\Documents\\side_projects\\trackme\\frontend\\src\\components\\temp\\Deposits.tsx",[],{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","severity":1,"message":"223","line":29,"column":6,"nodeType":"224","endLine":29,"endColumn":8,"suggestions":"225"},{"ruleId":"226","severity":1,"message":"227","line":4,"column":8,"nodeType":"228","messageId":"229","endLine":4,"endColumn":19},{"ruleId":"226","severity":1,"message":"230","line":5,"column":8,"nodeType":"228","messageId":"229","endLine":5,"endColumn":14},{"ruleId":"226","severity":1,"message":"231","line":6,"column":8,"nodeType":"228","messageId":"229","endLine":6,"endColumn":11},{"ruleId":"226","severity":1,"message":"232","line":7,"column":8,"nodeType":"228","messageId":"229","endLine":7,"endColumn":14},{"ruleId":"226","severity":1,"message":"233","line":8,"column":8,"nodeType":"228","messageId":"229","endLine":8,"endColumn":15},{"ruleId":"226","severity":1,"message":"234","line":9,"column":8,"nodeType":"228","messageId":"229","endLine":9,"endColumn":14},{"ruleId":"226","severity":1,"message":"235","line":10,"column":8,"nodeType":"228","messageId":"229","endLine":10,"endColumn":12},{"ruleId":"226","severity":1,"message":"236","line":11,"column":8,"nodeType":"228","messageId":"229","endLine":11,"endColumn":18},{"ruleId":"226","severity":1,"message":"237","line":12,"column":8,"nodeType":"228","messageId":"229","endLine":12,"endColumn":15},{"ruleId":"226","severity":1,"message":"238","line":13,"column":8,"nodeType":"228","messageId":"229","endLine":13,"endColumn":18},{"ruleId":"226","severity":1,"message":"239","line":14,"column":8,"nodeType":"228","messageId":"229","endLine":14,"endColumn":13},{"ruleId":"226","severity":1,"message":"240","line":15,"column":8,"nodeType":"228","messageId":"229","endLine":15,"endColumn":17},{"ruleId":"226","severity":1,"message":"241","line":18,"column":8,"nodeType":"228","messageId":"229","endLine":18,"endColumn":12},{"ruleId":"226","severity":1,"message":"242","line":19,"column":8,"nodeType":"228","messageId":"229","endLine":19,"endColumn":16},{"ruleId":"226","severity":1,"message":"243","line":20,"column":8,"nodeType":"228","messageId":"229","endLine":20,"endColumn":23},{"ruleId":"226","severity":1,"message":"244","line":25,"column":8,"nodeType":"228","messageId":"229","endLine":25,"endColumn":15},{"ruleId":"226","severity":1,"message":"245","line":120,"column":9,"nodeType":"228","messageId":"229","endLine":120,"endColumn":21},{"ruleId":"226","severity":1,"message":"246","line":4,"column":8,"nodeType":"228","messageId":"229","endLine":4,"endColumn":21},{"ruleId":"247","severity":1,"message":"248","line":1,"column":1,"nodeType":"249","endLine":7,"endColumn":3},{"ruleId":"226","severity":1,"message":"234","line":9,"column":8,"nodeType":"228","messageId":"229","endLine":9,"endColumn":14},{"ruleId":"226","severity":1,"message":"239","line":14,"column":8,"nodeType":"228","messageId":"229","endLine":14,"endColumn":13},{"ruleId":"226","severity":1,"message":"250","line":16,"column":8,"nodeType":"228","messageId":"229","endLine":16,"endColumn":12},{"ruleId":"226","severity":1,"message":"251","line":17,"column":8,"nodeType":"228","messageId":"229","endLine":17,"endColumn":13},{"ruleId":"226","severity":1,"message":"252","line":24,"column":8,"nodeType":"228","messageId":"229","endLine":24,"endColumn":13},{"ruleId":"226","severity":1,"message":"253","line":25,"column":8,"nodeType":"228","messageId":"229","endLine":25,"endColumn":16},{"ruleId":"226","severity":1,"message":"254","line":26,"column":8,"nodeType":"228","messageId":"229","endLine":26,"endColumn":14},{"ruleId":"226","severity":1,"message":"255","line":31,"column":8,"nodeType":"228","messageId":"229","endLine":31,"endColumn":13},{"ruleId":"226","severity":1,"message":"256","line":133,"column":9,"nodeType":"228","messageId":"229","endLine":133,"endColumn":25},{"ruleId":"226","severity":1,"message":"257","line":2,"column":3,"nodeType":"228","messageId":"229","endLine":2,"endColumn":12},{"ruleId":"226","severity":1,"message":"258","line":3,"column":3,"nodeType":"228","messageId":"229","endLine":3,"endColumn":19},{"ruleId":"226","severity":1,"message":"259","line":4,"column":3,"nodeType":"228","messageId":"229","endLine":4,"endColumn":19},{"ruleId":"218","replacedBy":"260"},{"ruleId":"220","replacedBy":"261"},{"ruleId":"226","severity":1,"message":"262","line":1,"column":17,"nodeType":"228","messageId":"229","endLine":1,"endColumn":25},{"ruleId":"226","severity":1,"message":"263","line":11,"column":8,"nodeType":"228","messageId":"229","endLine":11,"endColumn":16},{"ruleId":"226","severity":1,"message":"264","line":13,"column":8,"nodeType":"228","messageId":"229","endLine":13,"endColumn":16},{"ruleId":"226","severity":1,"message":"265","line":19,"column":26,"nodeType":"228","messageId":"229","endLine":19,"endColumn":38},{"ruleId":"226","severity":1,"message":"262","line":1,"column":17,"nodeType":"228","messageId":"229","endLine":1,"endColumn":25},{"ruleId":"226","severity":1,"message":"266","line":9,"column":8,"nodeType":"228","messageId":"229","endLine":9,"endColumn":14},{"ruleId":"226","severity":1,"message":"267","line":20,"column":3,"nodeType":"228","messageId":"229","endLine":20,"endColumn":11},{"ruleId":"226","severity":1,"message":"268","line":29,"column":3,"nodeType":"228","messageId":"229","endLine":29,"endColumn":19},{"ruleId":"226","severity":1,"message":"269","line":30,"column":3,"nodeType":"228","messageId":"229","endLine":30,"endColumn":12},{"ruleId":"226","severity":1,"message":"270","line":6,"column":8,"nodeType":"228","messageId":"229","endLine":6,"endColumn":16},{"ruleId":"226","severity":1,"message":"234","line":8,"column":3,"nodeType":"228","messageId":"229","endLine":8,"endColumn":9},{"ruleId":"226","severity":1,"message":"271","line":10,"column":3,"nodeType":"228","messageId":"229","endLine":10,"endColumn":9},{"ruleId":"226","severity":1,"message":"272","line":11,"column":3,"nodeType":"228","messageId":"229","endLine":11,"endColumn":13},{"ruleId":"226","severity":1,"message":"238","line":15,"column":3,"nodeType":"228","messageId":"229","endLine":15,"endColumn":13},{"ruleId":"226","severity":1,"message":"273","line":37,"column":9,"nodeType":"228","messageId":"229","endLine":37,"endColumn":16},{"ruleId":"226","severity":1,"message":"274","line":1,"column":15,"nodeType":"228","messageId":"229","endLine":1,"endColumn":27},{"ruleId":"226","severity":1,"message":"275","line":1,"column":46,"nodeType":"228","messageId":"229","endLine":1,"endColumn":51},{"ruleId":"226","severity":1,"message":"276","line":26,"column":11,"nodeType":"228","messageId":"229","endLine":26,"endColumn":16},{"ruleId":"226","severity":1,"message":"277","line":11,"column":8,"nodeType":"228","messageId":"229","endLine":11,"endColumn":17},{"ruleId":"278","severity":1,"message":"279","line":51,"column":9,"nodeType":"280","endLine":55,"endColumn":11},{"ruleId":"247","severity":1,"message":"281","line":10,"column":1,"nodeType":"249","endLine":21,"endColumn":3},{"ruleId":"247","severity":1,"message":"248","line":5,"column":1,"nodeType":"249","endLine":9,"endColumn":3},"no-native-reassign",["282"],"no-negated-in-lhs",["283"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["284"],"@typescript-eslint/no-unused-vars","'CssBaseline' is defined but never used.","Identifier","unusedVar","'Drawer' is defined but never used.","'Box' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Avatar' is defined but never used.","'List' is defined but never used.","'Typography' is defined but never used.","'Divider' is defined but never used.","'IconButton' is defined but never used.","'Badge' is defined but never used.","'Container' is defined but never used.","'Link' is defined but never used.","'MenuIcon' is defined but never used.","'ChevronLeftIcon' is defined but never used.","'AppIcon' is defined but never used.","'toggleDrawer' is assigned a value but never used.","'ListSubheader' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Grid' is defined but never used.","'Paper' is defined but never used.","'Chart' is defined but never used.","'Deposits' is defined but never used.","'Orders' is defined but never used.","'Title' is defined but never used.","'fixedHeightPaper' is assigned a value but never used.","'Accordion' is defined but never used.","'AccordionDetails' is defined but never used.","'AccordionSummary' is defined but never used.",["282"],["283"],"'useState' is defined but never used.","'EditIcon' is defined but never used.","'UndoIcon' is defined but never used.","'ListItemIcon' is defined but never used.","'Switch' is defined but never used.","'Backdrop' is defined but never used.","'FormControlLabel' is defined but never used.","'FormGroup' is defined but never used.","'Checkbox' is defined but never used.","'Button' is defined but never used.","'ButtonBase' is defined but never used.","'classes' is assigned a value but never used.","'createStyles' is defined but never used.","'Theme' is defined but never used.","'color' is assigned a value but never used.","'CheckIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Assign arrow function to a variable before exporting as module default","no-global-assign","no-unsafe-negation",{"desc":"285","fix":"286"},"Update the dependencies array to be: [dispatch]",{"range":"287","text":"288"},[963,965],"[dispatch]"]